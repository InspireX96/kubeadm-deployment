# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
# Default values for kube-prometheus-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
kube-prometheus-stack:
  ## ref: https://prometheus.io/docs/alerting/alertmanager/
  ##
  ## Configuration for alertmanager
  alertmanager:
    ## Deploy alertmanager
    ##
    enabled: true

    ## Configuration for Alertmanager service
    ##
    service:
      annotations: {}
      labels: {}
      clusterIP: ""

      ## Port for Alertmanager Service to listen on
      ##
      port: 9093
      ## To be used with a proxy extraContainer port
      ##
      targetPort: 9093
      ## Port to expose on each node
      ## Only used if service.type is 'NodePort'
      ##
      nodePort: 30903
      ## List of IP addresses at which the Prometheus server service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##

      ## Additional ports to open for Alertmanager service
      additionalPorts: []

      externalIPs: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      ## Service type
      ##
      type: NodePort

    ## Configuration for creating a separate Service for each statefulset Alertmanager replica
    ##
    servicePerReplica:
      enabled: false
      annotations: {}

      ## Port for Alertmanager Service per replica to listen on
      ##
      port: 9093

      ## To be used with a proxy extraContainer port
      targetPort: 9093

      ## Port to expose on each node
      ## Only used if servicePerReplica.type is 'NodePort'
      ##
      nodePort: 30904

      ## Loadbalancer source IP ranges
      ## Only used if servicePerReplica.type is "LoadBalancer"
      loadBalancerSourceRanges: []
      ## Service type
      ##
      type: NodePort

  ## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
  ##
  grafana:
    enabled: true
    namespaceOverride: ""

    ## ForceDeployDatasources Create datasource configmap even if grafana deployment has been disabled
    ##
    forceDeployDatasources: false

    ## ForceDeployDashboard Create dashboard configmap even if grafana deployment has been disabled
    ##
    forceDeployDashboards: false

    ## Deploy default dashboards.
    ##
    defaultDashboardsEnabled: true

    adminPassword: prom-operator

    service:
      port: 80
      targetPort: 3000
      nodePort: 30905
      portName: service
      type: NodePort

  ## Manages Prometheus and Alertmanager components
  ##
  prometheusOperator:
    enabled: true

    ## Configuration for Prometheus operator service
    ##
    service:
      annotations: {}
      labels: {}
      clusterIP: ""

      ## Port to expose on each node
      ## Only used if service.type is 'NodePort'
      ##
      nodePort: 30080

      nodePortTls: 30443

      ## Additional ports to open for Prometheus service
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services
      ##
      additionalPorts: []

      ## Loadbalancer IP
      ## Only use if service.type is "LoadBalancer"
      ##
      loadBalancerIP: ""
      loadBalancerSourceRanges: []

      ## Service type
      ## NodePort, ClusterIP, LoadBalancer
      ##
      type: NodePort

      ## List of IP addresses at which the Prometheus server service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []

  ## Deploy a Prometheus instance
  ##
  prometheus:
    enabled: true

    ## Configuration for Prometheus service
    ##
    service:
      annotations: {}
      labels: {}
      clusterIP: ""

      ## Port for Prometheus Service to listen on
      ##
      port: 9090

      ## To be used with a proxy extraContainer port
      targetPort: 9090

      ## List of IP addresses at which the Prometheus server service is available
      ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
      ##
      externalIPs: []

      ## Port to expose on each node
      ## Only used if service.type is 'NodePort'
      ##
      nodePort: 30090

      ## Loadbalancer IP
      ## Only use if service.type is "LoadBalancer"
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      ## Service type
      ##
      type: NodePort

      sessionAffinity: ""
